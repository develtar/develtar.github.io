<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on LTDev</title><link>https://develtar.github.io/posts/</link><description>Recent content in Posts on LTDev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 24 Aug 2023 11:31:28 +0200</lastBuildDate><atom:link href="https://develtar.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Improving QML code readability with singleton</title><link>https://develtar.github.io/posts/qt-improving-qml-readability-with-singletons/</link><pubDate>Thu, 24 Aug 2023 11:31:28 +0200</pubDate><guid>https://develtar.github.io/posts/qt-improving-qml-readability-with-singletons/</guid><description>This article explains how to take advantage of the singleton pattern in QML, to develope a clean and a structured utility class.
The singleton pattern is a software design pattern that ensures a class has one instance, providing a global point of access to it. Due to its global access, it is one of the most controversial pattern, and can lead to design problems if used incorrectly.
Advantages:
it is initialized only when it’s requested for the first time it can simplify code by making easier to access shared resources it can improve performance by avoiding the need to create multiple instances of a class Disadvantages:</description></item><item><title>UI/UX Design Resources</title><link>https://develtar.github.io/posts/ui-ux-design-resources/</link><pubDate>Wed, 18 Jan 2023 20:07:16 +0100</pubDate><guid>https://develtar.github.io/posts/ui-ux-design-resources/</guid><description>Icon Packs List of free design icon packs:
Feather Icons (license MIT)
Atlas Icons (license MIT)
Tablericons (license CC BY 4.0)
Flat icons (license CC BY 4.0)
BIC icons (license CC BY 4.0)
UI Line (license CC BY 4.0)
Nataicons (license CC BY 4.0)
heroicons (license CC BY 4.0)
Untitled UI Icons (license CC BY 4.0)
Flags (license CC BY 4.0)
SWM Icon Pack (license CC BY 4.0)
Iconic (license WTFPL)</description></item><item><title>Qt QML Live Reload</title><link>https://develtar.github.io/posts/qt-qml-live-reload/</link><pubDate>Fri, 13 Jan 2023 15:49:54 +0100</pubDate><guid>https://develtar.github.io/posts/qt-qml-live-reload/</guid><description>One of the most important and underestimated tools when developing QML apps, is QML live:
QML Live is a local and remote Qt Quick live reloading system. It allows you to change your QML user interface source code and view the result in realtime.
&amp;ndash; Qt Documentation
This tool can save countless hours of development when prototyping an application, because it simply reloads the edited files without the need of recompiling them.</description></item><item><title>Create a custom code highlight for Hugo</title><link>https://develtar.github.io/posts/hugo-custom-highlight-js/</link><pubDate>Mon, 09 Jan 2023 21:37:45 +0100</pubDate><guid>https://develtar.github.io/posts/hugo-custom-highlight-js/</guid><description>This article explains how to change the code highlight for a custom hugo website theme.
Suppose that the website is based on the PaperMod theme, and the source code colors needs to be customized.
In the PaperMod theme, the highlight.js library is used to provide different styles for each defined language. This file is located in:
. └── themes └── PaperMod └── assets └── js └── highlight.min.js Now, update the minified library in the custom theme to apply the changes, and change the css style for the target language:</description></item></channel></rss>