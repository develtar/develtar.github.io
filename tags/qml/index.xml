<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>qml on LTDev</title><link>https://develtar.github.io/tags/qml/</link><description>Recent content in qml on LTDev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 24 Aug 2023 11:31:28 +0200</lastBuildDate><atom:link href="https://develtar.github.io/tags/qml/index.xml" rel="self" type="application/rss+xml"/><item><title>Improving QML code readability with singleton</title><link>https://develtar.github.io/posts/qt-improving-qml-readability-with-singletons/</link><pubDate>Thu, 24 Aug 2023 11:31:28 +0200</pubDate><guid>https://develtar.github.io/posts/qt-improving-qml-readability-with-singletons/</guid><description>This article explains how to take advantage of the singleton pattern in QML, to develope a clean and a structured utility class.
The singleton pattern is a software design pattern that ensures a class has one instance, providing a global point of access to it. Due to its global access, it is one of the most controversial pattern, and can lead to design problems if used incorrectly.
Advantages:
it is initialized only when itâ€™s requested for the first time it can simplify code by making easier to access shared resources it can improve performance by avoiding the need to create multiple instances of a class Disadvantages:</description></item><item><title>Qt QML Live Reload</title><link>https://develtar.github.io/posts/qt-qml-live-reload/</link><pubDate>Fri, 13 Jan 2023 15:49:54 +0100</pubDate><guid>https://develtar.github.io/posts/qt-qml-live-reload/</guid><description>One of the most important and underestimated tools when developing QML apps, is QML live:
QML Live is a local and remote Qt Quick live reloading system. It allows you to change your QML user interface source code and view the result in realtime.
&amp;ndash; Qt Documentation
This tool can save countless hours of development when prototyping an application, because it simply reloads the edited files without the need of recompiling them.</description></item><item><title>Qt PDF Viewer Library</title><link>https://develtar.github.io/projects/qt-pdf-viewer-library/</link><pubDate>Mon, 09 Jan 2023 19:48:03 +0100</pubDate><guid>https://develtar.github.io/projects/qt-pdf-viewer-library/</guid><description>The qt-pdf-viewer-library is a qml wrapper of pdf.js library which allows you to render PDF files in a WebView. This library also works for Android devices, and it uses WebSocketServer, WebSocketTransport and WebChannel to exchange data between qml and the browser environment.
For more info check the repository page: https://github.com/develtar/qt-pdf-viewer-library
import it.ltdev.qt.qml.components 1.0 as LTDev ApplicationWindow { ... property int x: 12 LTDev.PdfView { id: pdfView anchors.fill: parent onViewerLoaded: { // Load pdf only when viewer is ready pdfView.</description></item></channel></rss>